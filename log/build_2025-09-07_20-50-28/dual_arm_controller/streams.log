[0.007s] Invoking command in '/home/feng/dual_arm_control/build/dual_arm_controller': CMAKE_PREFIX_PATH=/home/feng/dual_arm_control/install/dummy2_arm_moveit_config:/home/feng/dual_arm_control/install/dual_arm_controller:/home/feng/zed_ros/install/zed_ros2:/home/feng/zed_ros/install/zed_wrapper:/home/feng/zed_ros/install/zed_components:/opt/ros/humble /usr/bin/cmake --build /home/feng/dual_arm_control/build/dual_arm_controller -- -j32 -l32
[0.051s] [ 50%] [32mBuilding CXX object CMakeFiles/dual_arm_controller_node.dir/src/dual_arm_controller_node.cpp.o[0m
[2.746s] In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33[m[K,
[2.746s]                  from [01m[K/usr/include/c++/11/bits/allocator.h:46[m[K,
[2.746s]                  from [01m[K/usr/include/c++/11/memory:64[m[K,
[2.746s]                  from [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:1[m[K:
[2.746s] /usr/include/c++/11/ext/new_allocator.h: In instantiation of â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[16]}; _Tp = moveit::planning_interface::MoveGroupInterface][m[Kâ€™:
[2.746s] [01m[K/usr/include/c++/11/bits/alloc_traits.h:516:17:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[16]}; _Tp = moveit::planning_interface::MoveGroupInterface; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<moveit::planning_interface::MoveGroupInterface>][m[Kâ€™
[2.746s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {DualArmController*, const char (&)[16]}; _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.746s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[16]}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.746s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[16]}; _Tp = moveit::planning_interface::MoveGroupInterface; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.746s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:409:59:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[16]}; _Tp = moveit::planning_interface::MoveGroupInterface][m[Kâ€™
[2.746s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:862:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[16]}][m[Kâ€™
[2.746s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:878:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[16]}][m[Kâ€™
[2.746s] [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:16:92:[m[K   required from here
[2.746s] [01m[K/usr/include/c++/11/ext/new_allocator.h:162:11:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(DualArmController*, const char [16])[m[Kâ€™
[2.746s]   162 |         { [01;31m[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)[m[K; }
[2.746s]       |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[2.746s] In file included from [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:3[m[K:
[2.746s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:159:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(moveit::planning_interface::MoveGroupInterface&&)[m[Kâ€™
[2.746s]   159 |   [01;36m[KMoveGroupInterface[m[K(MoveGroupInterface&& other) noexcept;
[2.746s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:159:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:145:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(const SharedPtr&, const string&, const std::shared_ptr<tf2_ros::Buffer>&, const rclcpp::Duration&)[m[Kâ€™
[2.754s]   145 |   [01;36m[KMoveGroupInterface[m[K(const rclcpp::Node::SharedPtr& node, const std::string& group,
[2.754s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:145:53:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KDualArmController*[m[Kâ€™ to â€˜[01m[Kconst SharedPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<rclcpp::Node>&[m[Kâ€™}
[2.754s]   145 |   MoveGroupInterface([01;36m[Kconst rclcpp::Node::SharedPtr& node[m[K, const std::string& group,
[2.754s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:134:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(const SharedPtr&, const moveit::planning_interface::MoveGroupInterface::Options&, const std::shared_ptr<tf2_ros::Buffer>&, const rclcpp::Duration&)[m[Kâ€™
[2.754s]   134 |   [01;36m[KMoveGroupInterface[m[K(const rclcpp::Node::SharedPtr& node, const Options& opt,
[2.754s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:134:53:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KDualArmController*[m[Kâ€™ to â€˜[01m[Kconst SharedPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<rclcpp::Node>&[m[Kâ€™}
[2.754s]   134 |   MoveGroupInterface([01;36m[Kconst rclcpp::Node::SharedPtr& node[m[K, const Options& opt,
[2.754s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[2.754s] In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33[m[K,
[2.754s]                  from [01m[K/usr/include/c++/11/bits/allocator.h:46[m[K,
[2.754s]                  from [01m[K/usr/include/c++/11/memory:64[m[K,
[2.754s]                  from [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:1[m[K:
[2.754s] /usr/include/c++/11/ext/new_allocator.h: In instantiation of â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[17]}; _Tp = moveit::planning_interface::MoveGroupInterface][m[Kâ€™:
[2.754s] [01m[K/usr/include/c++/11/bits/alloc_traits.h:516:17:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[17]}; _Tp = moveit::planning_interface::MoveGroupInterface; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<moveit::planning_interface::MoveGroupInterface>][m[Kâ€™
[2.754s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {DualArmController*, const char (&)[17]}; _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.754s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[17]}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.754s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[17]}; _Tp = moveit::planning_interface::MoveGroupInterface; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.754s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:409:59:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[17]}; _Tp = moveit::planning_interface::MoveGroupInterface][m[Kâ€™
[2.754s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:862:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[17]}][m[Kâ€™
[2.754s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:878:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[17]}][m[Kâ€™
[2.754s] [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:19:93:[m[K   required from here
[2.754s] [01m[K/usr/include/c++/11/ext/new_allocator.h:162:11:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(DualArmController*, const char [17])[m[Kâ€™
[2.754s]   162 |         { [01;31m[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)[m[K; }
[2.754s]       |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[2.754s] In file included from [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:3[m[K:
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:159:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(moveit::planning_interface::MoveGroupInterface&&)[m[Kâ€™
[2.754s]   159 |   [01;36m[KMoveGroupInterface[m[K(MoveGroupInterface&& other) noexcept;
[2.754s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:159:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:145:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(const SharedPtr&, const string&, const std::shared_ptr<tf2_ros::Buffer>&, const rclcpp::Duration&)[m[Kâ€™
[2.754s]   145 |   [01;36m[KMoveGroupInterface[m[K(const rclcpp::Node::SharedPtr& node, const std::string& group,
[2.754s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:145:53:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KDualArmController*[m[Kâ€™ to â€˜[01m[Kconst SharedPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<rclcpp::Node>&[m[Kâ€™}
[2.754s]   145 |   MoveGroupInterface([01;36m[Kconst rclcpp::Node::SharedPtr& node[m[K, const std::string& group,
[2.754s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[2.754s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:134:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(const SharedPtr&, const moveit::planning_interface::MoveGroupInterface::Options&, const std::shared_ptr<tf2_ros::Buffer>&, const rclcpp::Duration&)[m[Kâ€™
[2.755s]   134 |   [01;36m[KMoveGroupInterface[m[K(const rclcpp::Node::SharedPtr& node, const Options& opt,
[2.755s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.755s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:134:53:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KDualArmController*[m[Kâ€™ to â€˜[01m[Kconst SharedPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<rclcpp::Node>&[m[Kâ€™}
[2.755s]   134 |   MoveGroupInterface([01;36m[Kconst rclcpp::Node::SharedPtr& node[m[K, const Options& opt,
[2.755s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[2.755s] In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33[m[K,
[2.755s]                  from [01m[K/usr/include/c++/11/bits/allocator.h:46[m[K,
[2.755s]                  from [01m[K/usr/include/c++/11/memory:64[m[K,
[2.755s]                  from [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:1[m[K:
[2.755s] /usr/include/c++/11/ext/new_allocator.h: In instantiation of â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[18]}; _Tp = moveit::planning_interface::MoveGroupInterface][m[Kâ€™:
[2.755s] [01m[K/usr/include/c++/11/bits/alloc_traits.h:516:17:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[18]}; _Tp = moveit::planning_interface::MoveGroupInterface; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<moveit::planning_interface::MoveGroupInterface>][m[Kâ€™
[2.755s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {DualArmController*, const char (&)[18]}; _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.755s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[18]}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.755s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[18]}; _Tp = moveit::planning_interface::MoveGroupInterface; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[2.755s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:409:59:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[18]}; _Tp = moveit::planning_interface::MoveGroupInterface][m[Kâ€™
[2.755s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:862:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Alloc = std::allocator<moveit::planning_interface::MoveGroupInterface>; _Args = {DualArmController*, const char (&)[18]}][m[Kâ€™
[2.755s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:878:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = moveit::planning_interface::MoveGroupInterface; _Args = {DualArmController*, const char (&)[18]}][m[Kâ€™
[2.755s] [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:25:94:[m[K   required from here
[2.755s] [01m[K/usr/include/c++/11/ext/new_allocator.h:162:11:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(DualArmController*, const char [18])[m[Kâ€™
[2.755s]   162 |         { [01;31m[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)[m[K; }
[2.755s]       |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[2.755s] In file included from [01m[K/home/feng/dual_arm_control/src/dual_arm_controller/src/dual_arm_controller_node.cpp:3[m[K:
[2.755s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:159:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(moveit::planning_interface::MoveGroupInterface&&)[m[Kâ€™
[2.755s]   159 |   [01;36m[KMoveGroupInterface[m[K(MoveGroupInterface&& other) noexcept;
[2.755s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.755s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:159:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[2.755s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:145:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(const SharedPtr&, const string&, const std::shared_ptr<tf2_ros::Buffer>&, const rclcpp::Duration&)[m[Kâ€™
[2.755s]   145 |   [01;36m[KMoveGroupInterface[m[K(const rclcpp::Node::SharedPtr& node, const std::string& group,
[2.755s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.755s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:145:53:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KDualArmController*[m[Kâ€™ to â€˜[01m[Kconst SharedPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<rclcpp::Node>&[m[Kâ€™}
[2.755s]   145 |   MoveGroupInterface([01;36m[Kconst rclcpp::Node::SharedPtr& node[m[K, const std::string& group,
[2.755s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[2.755s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:134:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kmoveit::planning_interface::MoveGroupInterface::MoveGroupInterface(const SharedPtr&, const moveit::planning_interface::MoveGroupInterface::Options&, const std::shared_ptr<tf2_ros::Buffer>&, const rclcpp::Duration&)[m[Kâ€™
[2.755s]   134 |   [01;36m[KMoveGroupInterface[m[K(const rclcpp::Node::SharedPtr& node, const Options& opt,
[2.755s]       |   [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
[2.755s] [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:134:53:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KDualArmController*[m[Kâ€™ to â€˜[01m[Kconst SharedPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<rclcpp::Node>&[m[Kâ€™}
[2.755s]   134 |   MoveGroupInterface([01;36m[Kconst rclcpp::Node::SharedPtr& node[m[K, const Options& opt,
[2.755s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[3.283s] gmake[2]: *** [CMakeFiles/dual_arm_controller_node.dir/build.make:76ï¼šCMakeFiles/dual_arm_controller_node.dir/src/dual_arm_controller_node.cpp.o] é”™è¯¯ 1
[3.283s] gmake[1]: *** [CMakeFiles/Makefile2:137ï¼šCMakeFiles/dual_arm_controller_node.dir/all] é”™è¯¯ 2
[3.283s] gmake: *** [Makefile:146ï¼šall] é”™è¯¯ 2
[3.285s] Invoked command in '/home/feng/dual_arm_control/build/dual_arm_controller' returned '2': CMAKE_PREFIX_PATH=/home/feng/dual_arm_control/install/dummy2_arm_moveit_config:/home/feng/dual_arm_control/install/dual_arm_controller:/home/feng/zed_ros/install/zed_ros2:/home/feng/zed_ros/install/zed_wrapper:/home/feng/zed_ros/install/zed_components:/opt/ros/humble /usr/bin/cmake --build /home/feng/dual_arm_control/build/dual_arm_controller -- -j32 -l32
